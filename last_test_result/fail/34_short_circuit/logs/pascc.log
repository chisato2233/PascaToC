[info] [:] 日志系统初始化完成
[debug] [:] 读取 Pascal 源代码
[debug] [:] 开始词法分析，输入长度: 562 字节
[debug] [:] 开始解析Pascal源代码...
[debug] [:] Token: program, 类型: 258, 位置: 1:0
[debug] [:] Token: main, 类型: 321, 位置: 1:8
[debug] [:] Token: ;, 类型: 312, 位置: 1:12
[debug] [:] Token: var, 类型: 261, 位置: 2:0
[debug] [:] Token: g, 类型: 321, 位置: 2:4
[debug] [:] Token: ,, 类型: 314, 位置: 2:5
[debug] [:] Token: i, 类型: 321, 位置: 2:7
[debug] [:] Token: :, 类型: 313, 位置: 2:8
[debug] [:] Token: integer, 类型: 288, 位置: 2:10
[debug] [:] Token: ;, 类型: 312, 位置: 2:17
[debug] [:] Token: function, 类型: 263, 位置: 4:0
[debug] [:] Token: func, 类型: 321, 位置: 4:9
[debug] [:] Token: (, 类型: 308, 位置: 4:13
[debug] [:] Token: n, 类型: 321, 位置: 4:14
[debug] [:] Token: :, 类型: 313, 位置: 4:15
[debug] [:] Token: integer, 类型: 288, 位置: 4:17
[debug] [:] 在parameter_declaration中创建新的参数列表
[debug] [:] 添加普通参数: n 类型: int
[debug] [:] Token: ), 类型: 309, 位置: 4:24
[debug] [:] 参数列表处理完成，包含1个参数
[debug] [:] Token: :, 类型: 313, 位置: 4:25
[debug] [:] Token: integer, 类型: 288, 位置: 4:27
[debug] [:] Token: ;, 类型: 312, 位置: 4:34
[debug] [:] Token: begin, 类型: 259, 位置: 5:0
[debug] [:] 创建新的空声明列表 (地址: 0x55c9b98845d0)
[debug] [:] Token: g, 类型: 321, 位置: 6:2
[debug] [:] Token: :=, 类型: 293, 位置: 6:4
[debug] [:] Token: g, 类型: 321, 位置: 6:7
[debug] [:] Token: +, 类型: 294, 位置: 6:9
[debug] [:] Token: n, 类型: 321, 位置: 6:11
[debug] [:] Token: ;, 类型: 312, 位置: 6:12
[debug] [:] 添加第一条语句到语句列表
[debug] [:] Token: write, 类型: 286, 位置: 7:2
[debug] [:] Token: (, 类型: 308, 位置: 7:7
[debug] [:] Token: g, 类型: 321, 位置: 7:8
[debug] [:] Token: ), 类型: 309, 位置: 7:9
[debug] [:] 向语句列表添加新语句
[debug] [:] Token: ;, 类型: 312, 位置: 7:10
[debug] [:] Token: func, 类型: 321, 位置: 8:2
[debug] [:] Token: :=, 类型: 293, 位置: 8:7
[debug] [:] Token: g, 类型: 321, 位置: 8:10
[debug] [:] Token: ;, 类型: 312, 位置: 8:11
[debug] [:] 向语句列表添加新语句
[debug] [:] Token: end, 类型: 260, 位置: 9:0
[debug] [:] 处理语句列表后的分号
[debug] [:] 处理完整个复合语句
[debug] [:] 创建新的声明列表用于函数func
[debug] [:] 添加函数func到声明列表
[debug] [:] Token: ;, 类型: 312, 位置: 9:3
[debug] [:] 函数声明处理完成，当前声明列表包含1个项目
[debug] [:] 合并函数声明后，声明列表包含2个项目
[debug] [:] Token: begin, 类型: 259, 位置: 11:0
[debug] [:] Token: i, 类型: 321, 位置: 12:2
[debug] [:] Token: :=, 类型: 293, 位置: 12:4
[debug] [:] Token: 11, 类型: 317, 位置: 12:7
[debug] [:] Token: ;, 类型: 312, 位置: 12:9
[debug] [:] 添加第一条语句到语句列表
[debug] [:] Token: if, 类型: 264, 位置: 13:2
[debug] [:] Token: (, 类型: 308, 位置: 13:5
[debug] [:] Token: i, 类型: 321, 位置: 13:6
[debug] [:] Token: >, 类型: 302, 位置: 13:8
[debug] [:] Token: 10, 类型: 317, 位置: 13:10
[debug] [:] Token: ), 类型: 309, 位置: 13:12
[debug] [:] Token: and, 类型: 282, 位置: 13:14
[debug] [:] Token: (, 类型: 308, 位置: 13:18
[debug] [:] Token: func, 类型: 321, 位置: 13:19
[debug] [:] Token: (, 类型: 308, 位置: 13:23
[debug] [:] Token: i, 类型: 321, 位置: 13:24
[debug] [:] Token: ), 类型: 309, 位置: 13:25
[debug] [:] Token: <>, 类型: 299, 位置: 13:27
[debug] [:] Token: 0, 类型: 317, 位置: 13:30
[debug] [:] Token: ), 类型: 309, 位置: 13:31
[debug] [:] Token: then, 类型: 265, 位置: 13:33
[debug] [:] Token: i, 类型: 321, 位置: 14:4
[debug] [:] Token: :=, 类型: 293, 位置: 14:6
[debug] [:] Token: 1, 类型: 317, 位置: 14:9
[debug] [:] Token: else, 类型: 266, 位置: 15:2
[debug] [:] Token: i, 类型: 321, 位置: 16:4
[debug] [:] Token: :=, 类型: 293, 位置: 16:6
[debug] [:] Token: 0, 类型: 317, 位置: 16:9
[debug] [:] Token: ;, 类型: 312, 位置: 16:10
[debug] [:] 向语句列表添加新语句
[debug] [:] Token: write, 类型: 286, 位置: 17:2
[debug] [:] Token: (, 类型: 308, 位置: 17:7
[debug] [:] Token: i, 类型: 321, 位置: 17:8
[debug] [:] Token: ), 类型: 309, 位置: 17:9
[debug] [:] 向语句列表添加新语句
[debug] [:] Token: ;, 类型: 312, 位置: 17:10
[debug] [:] Token: i, 类型: 321, 位置: 18:2
[debug] [:] Token: :=, 类型: 293, 位置: 18:4
[debug] [:] Token: 10, 类型: 317, 位置: 18:7
[debug] [:] Token: ;, 类型: 312, 位置: 18:9
[debug] [:] 向语句列表添加新语句
[debug] [:] Token: if, 类型: 264, 位置: 19:2
[debug] [:] Token: (, 类型: 308, 位置: 19:5
[debug] [:] Token: i, 类型: 321, 位置: 19:6
[debug] [:] Token: >, 类型: 302, 位置: 19:8
[debug] [:] Token: 11, 类型: 317, 位置: 19:10
[debug] [:] Token: ), 类型: 309, 位置: 19:12
[debug] [:] Token: and, 类型: 282, 位置: 19:14
[debug] [:] Token: (, 类型: 308, 位置: 19:18
[debug] [:] Token: func, 类型: 321, 位置: 19:19
[debug] [:] Token: (, 类型: 308, 位置: 19:23
[debug] [:] Token: i, 类型: 321, 位置: 19:24
[debug] [:] Token: ), 类型: 309, 位置: 19:25
[debug] [:] Token: <>, 类型: 299, 位置: 19:27
[debug] [:] Token: 0, 类型: 317, 位置: 19:30
[debug] [:] Token: ), 类型: 309, 位置: 19:31
[debug] [:] Token: then, 类型: 265, 位置: 19:33
[debug] [:] Token: i, 类型: 321, 位置: 20:4
[debug] [:] Token: :=, 类型: 293, 位置: 20:6
[debug] [:] Token: 1, 类型: 317, 位置: 20:9
[debug] [:] Token: else, 类型: 266, 位置: 21:2
[debug] [:] Token: i, 类型: 321, 位置: 22:4
[debug] [:] Token: :=, 类型: 293, 位置: 22:6
[debug] [:] Token: 0, 类型: 317, 位置: 22:9
[debug] [:] Token: ;, 类型: 312, 位置: 22:10
[debug] [:] 向语句列表添加新语句
[debug] [:] Token: write, 类型: 286, 位置: 23:2
[debug] [:] Token: (, 类型: 308, 位置: 23:7
[debug] [:] Token: i, 类型: 321, 位置: 23:8
[debug] [:] Token: ), 类型: 309, 位置: 23:9
[debug] [:] 向语句列表添加新语句
[debug] [:] Token: ;, 类型: 312, 位置: 23:10
[debug] [:] Token: i, 类型: 321, 位置: 24:2
[debug] [:] Token: :=, 类型: 293, 位置: 24:4
[debug] [:] Token: 100, 类型: 317, 位置: 24:7
[debug] [:] Token: ;, 类型: 312, 位置: 24:10
[debug] [:] 向语句列表添加新语句
[debug] [:] Token: if, 类型: 264, 位置: 25:2
[debug] [:] Token: (, 类型: 308, 位置: 25:5
[debug] [:] Token: i, 类型: 321, 位置: 25:6
[debug] [:] Token: <=, 类型: 301, 位置: 25:8
[debug] [:] Token: 99, 类型: 317, 位置: 25:11
[debug] [:] Token: ), 类型: 309, 位置: 25:13
[debug] [:] Token: or, 类型: 283, 位置: 25:15
[debug] [:] Token: (, 类型: 308, 位置: 25:18
[debug] [:] Token: func, 类型: 321, 位置: 25:19
[debug] [:] Token: (, 类型: 308, 位置: 25:23
[debug] [:] Token: i, 类型: 321, 位置: 25:24
[debug] [:] Token: ), 类型: 309, 位置: 25:25
[debug] [:] Token: <>, 类型: 299, 位置: 25:27
[debug] [:] Token: 0, 类型: 317, 位置: 25:30
[debug] [:] Token: ), 类型: 309, 位置: 25:31
[debug] [:] Token: then, 类型: 265, 位置: 25:33
[debug] [:] Token: i, 类型: 321, 位置: 26:4
[debug] [:] Token: :=, 类型: 293, 位置: 26:6
[debug] [:] Token: 1, 类型: 317, 位置: 26:9
[debug] [:] Token: else, 类型: 266, 位置: 27:2
[debug] [:] Token: i, 类型: 321, 位置: 28:4
[debug] [:] Token: :=, 类型: 293, 位置: 28:6
[debug] [:] Token: 0, 类型: 317, 位置: 28:9
[debug] [:] Token: ;, 类型: 312, 位置: 28:10
[debug] [:] 向语句列表添加新语句
[debug] [:] Token: write, 类型: 286, 位置: 29:2
[debug] [:] Token: (, 类型: 308, 位置: 29:7
[debug] [:] Token: i, 类型: 321, 位置: 29:8
[debug] [:] Token: ), 类型: 309, 位置: 29:9
[debug] [:] 向语句列表添加新语句
[debug] [:] Token: ;, 类型: 312, 位置: 29:10
[debug] [:] Token: i, 类型: 321, 位置: 30:2
[debug] [:] Token: :=, 类型: 293, 位置: 30:4
[debug] [:] Token: 99, 类型: 317, 位置: 30:7
[debug] [:] Token: ;, 类型: 312, 位置: 30:9
[debug] [:] 向语句列表添加新语句
[debug] [:] Token: if, 类型: 264, 位置: 31:2
[debug] [:] Token: (, 类型: 308, 位置: 31:5
[debug] [:] Token: i, 类型: 321, 位置: 31:6
[debug] [:] Token: <=, 类型: 301, 位置: 31:8
[debug] [:] Token: 100, 类型: 317, 位置: 31:11
[debug] [:] Token: ), 类型: 309, 位置: 31:14
[debug] [:] Token: or, 类型: 283, 位置: 31:16
[debug] [:] Token: (, 类型: 308, 位置: 31:19
[debug] [:] Token: func, 类型: 321, 位置: 31:20
[debug] [:] Token: (, 类型: 308, 位置: 31:24
[debug] [:] Token: i, 类型: 321, 位置: 31:25
[debug] [:] Token: ), 类型: 309, 位置: 31:26
[debug] [:] Token: <>, 类型: 299, 位置: 31:28
[debug] [:] Token: 0, 类型: 317, 位置: 31:31
[debug] [:] Token: ), 类型: 309, 位置: 31:32
[debug] [:] Token: then, 类型: 265, 位置: 31:34
[debug] [:] Token: i, 类型: 321, 位置: 32:4
[debug] [:] Token: :=, 类型: 293, 位置: 32:6
[debug] [:] Token: 1, 类型: 317, 位置: 32:9
[debug] [:] Token: else, 类型: 266, 位置: 33:2
[debug] [:] Token: i, 类型: 321, 位置: 34:4
[debug] [:] Token: :=, 类型: 293, 位置: 34:6
[debug] [:] Token: 0, 类型: 317, 位置: 34:9
[debug] [:] Token: ;, 类型: 312, 位置: 34:10
[debug] [:] 向语句列表添加新语句
[debug] [:] Token: if, 类型: 264, 位置: 35:2
[debug] [:] Token: (, 类型: 308, 位置: 35:5
[debug] [:] Token: func, 类型: 321, 位置: 35:6
[debug] [:] Token: (, 类型: 308, 位置: 35:10
[debug] [:] Token: 99, 类型: 317, 位置: 35:11
[debug] [:] Token: ), 类型: 309, 位置: 35:13
[debug] [:] Token: =, 类型: 298, 位置: 35:15
[debug] [:] Token: 0, 类型: 317, 位置: 35:17
[debug] [:] Token: ), 类型: 309, 位置: 35:18
[debug] [:] Token: and, 类型: 282, 位置: 35:20
[debug] [:] Token: (, 类型: 308, 位置: 35:24
[debug] [:] Token: func, 类型: 321, 位置: 35:25
[debug] [:] Token: (, 类型: 308, 位置: 35:29
[debug] [:] Token: 100, 类型: 317, 位置: 35:30
[debug] [:] Token: ), 类型: 309, 位置: 35:33
[debug] [:] Token: <>, 类型: 299, 位置: 35:35
[debug] [:] Token: 0, 类型: 317, 位置: 35:38
[debug] [:] Token: ), 类型: 309, 位置: 35:39
[debug] [:] Token: then, 类型: 265, 位置: 35:41
[debug] [:] Token: i, 类型: 321, 位置: 36:4
[debug] [:] Token: :=, 类型: 293, 位置: 36:6
[debug] [:] Token: 1, 类型: 317, 位置: 36:9
[debug] [:] Token: else, 类型: 266, 位置: 37:2
[debug] [:] Token: i, 类型: 321, 位置: 38:4
[debug] [:] Token: :=, 类型: 293, 位置: 38:6
[debug] [:] Token: 0, 类型: 317, 位置: 38:9
[debug] [:] Token: ;, 类型: 312, 位置: 38:10
[debug] [:] 向语句列表添加新语句
[debug] [:] Token: end, 类型: 260, 位置: 39:0
[debug] [:] 处理语句列表后的分号
[debug] [:] 处理完整个复合语句
[debug] [:] Token: ., 类型: 315, 位置: 39:3
[info] [:] 词法分析完成，共识别 195 个token
[debug] [:] 语法分析成功
[info] [:] + Program: main
[info] [:]   Body:
[info] [:]   + Block
[info] [:]     Declarations:
[info] [:]       + Variable Declaration: int
[info] [:]         - g
[info] [:]         - i
[info] [:]       + Function Declaration: func -> int
[info] [:]         Parameters:
[info] [:]           - n: int
[info] [:]         Body:
[info] [:]           + Block
[info] [:]             Body:
[info] [:]               + Compound Statement
[info] [:]                 + Assignment: g =
[info] [:]                   + Binary Op: +
[info] [:]                     Left:
[info] [:]                       + Variable: g
[info] [:]                     Right:
[info] [:]                       + Variable: n
[info] [:]                 + Write Statement
[info] [:]                   + Variable: g
[info] [:]                 + Assignment: func =
[info] [:]                   + Variable: g
[info] [:]     Body:
[info] [:]       + Compound Statement
[info] [:]         + Assignment: i =
[info] [:]           + Number: 11
[info] [:]         + If Statement
[info] [:]           Condition:
[info] [:]             + Binary Op: &&
[info] [:]               Left:
[info] [:]                 + Binary Op: >
[info] [:]                   Left:
[info] [:]                     + Variable: i
[info] [:]                   Right:
[info] [:]                     + Number: 10
[info] [:]               Right:
[info] [:]                 + Binary Op: !=
[info] [:]                   Left:
[info] [:]                     + Function Call: func
[info] [:]                       Arguments:
[info] [:]                         + Variable: i
[info] [:]                   Right:
[info] [:]                     + Number: 0
[info] [:]           Then:
[info] [:]             + Assignment: i =
[info] [:]               + Number: 1
[info] [:]           Else:
[info] [:]             + Assignment: i =
[info] [:]               + Number: 0
[info] [:]         + Write Statement
[info] [:]           + Variable: i
[info] [:]         + Assignment: i =
[info] [:]           + Number: 10
[info] [:]         + If Statement
[info] [:]           Condition:
[info] [:]             + Binary Op: &&
[info] [:]               Left:
[info] [:]                 + Binary Op: >
[info] [:]                   Left:
[info] [:]                     + Variable: i
[info] [:]                   Right:
[info] [:]                     + Number: 11
[info] [:]               Right:
[info] [:]                 + Binary Op: !=
[info] [:]                   Left:
[info] [:]                     + Function Call: func
[info] [:]                       Arguments:
[info] [:]                         + Variable: i
[info] [:]                   Right:
[info] [:]                     + Number: 0
[info] [:]           Then:
[info] [:]             + Assignment: i =
[info] [:]               + Number: 1
[info] [:]           Else:
[info] [:]             + Assignment: i =
[info] [:]               + Number: 0
[info] [:]         + Write Statement
[info] [:]           + Variable: i
[info] [:]         + Assignment: i =
[info] [:]           + Number: 100
[info] [:]         + If Statement
[info] [:]           Condition:
[info] [:]             + Binary Op: ||
[info] [:]               Left:
[info] [:]                 + Binary Op: <=
[info] [:]                   Left:
[info] [:]                     + Variable: i
[info] [:]                   Right:
[info] [:]                     + Number: 99
[info] [:]               Right:
[info] [:]                 + Binary Op: !=
[info] [:]                   Left:
[info] [:]                     + Function Call: func
[info] [:]                       Arguments:
[info] [:]                         + Variable: i
[info] [:]                   Right:
[info] [:]                     + Number: 0
[info] [:]           Then:
[info] [:]             + Assignment: i =
[info] [:]               + Number: 1
[info] [:]           Else:
[info] [:]             + Assignment: i =
[info] [:]               + Number: 0
[info] [:]         + Write Statement
[info] [:]           + Variable: i
[info] [:]         + Assignment: i =
[info] [:]           + Number: 99
[info] [:]         + If Statement
[info] [:]           Condition:
[info] [:]             + Binary Op: ||
[info] [:]               Left:
[info] [:]                 + Binary Op: <=
[info] [:]                   Left:
[info] [:]                     + Variable: i
[info] [:]                   Right:
[info] [:]                     + Number: 100
[info] [:]               Right:
[info] [:]                 + Binary Op: !=
[info] [:]                   Left:
[info] [:]                     + Function Call: func
[info] [:]                       Arguments:
[info] [:]                         + Variable: i
[info] [:]                   Right:
[info] [:]                     + Number: 0
[info] [:]           Then:
[info] [:]             + Assignment: i =
[info] [:]               + Number: 1
[info] [:]           Else:
[info] [:]             + Assignment: i =
[info] [:]               + Number: 0
[info] [:]         + If Statement
[info] [:]           Condition:
[info] [:]             + Binary Op: &&
[info] [:]               Left:
[info] [:]                 + Binary Op: ==
[info] [:]                   Left:
[info] [:]                     + Function Call: func
[info] [:]                       Arguments:
[info] [:]                         + Number: 99
[info] [:]                   Right:
[info] [:]                     + Number: 0
[info] [:]               Right:
[info] [:]                 + Binary Op: !=
[info] [:]                   Left:
[info] [:]                     + Function Call: func
[info] [:]                       Arguments:
[info] [:]                         + Number: 100
[info] [:]                   Right:
[info] [:]                     + Number: 0
[info] [:]           Then:
[info] [:]             + Assignment: i =
[info] [:]               + Number: 1
[info] [:]           Else:
[info] [:]             + Assignment: i =
[info] [:]               + Number: 0
[info] [:] 转换完成: '34_short_circuit.pas' -> '34_short_circuit.c'
