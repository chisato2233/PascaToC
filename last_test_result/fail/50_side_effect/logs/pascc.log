[info] [:] 日志系统初始化完成
[debug] [:] 读取 Pascal 源代码
[debug] [:] 开始词法分析，输入长度: 593 字节
[debug] [:] 开始解析Pascal源代码...
[debug] [:] Token: program, 类型: 258, 位置: 1:0
[debug] [:] Token: main, 类型: 321, 位置: 1:8
[debug] [:] Token: ;, 类型: 312, 位置: 1:12
[debug] [:] Token: const, 类型: 276, 位置: 2:0
[debug] [:] Token: split, 类型: 321, 位置: 2:6
[debug] [:] Token: =, 类型: 298, 位置: 2:12
[debug] [:] Token: ',, 类型: 320, 位置: 2:14
[debug] [:] Token: ;, 类型: 312, 位置: 2:17
[debug] [:] 添加常量 split 到声明列表
[debug] [:] Token: var, 类型: 261, 位置: 3:0
[debug] [:] const声明区块处理完成，当前有1个声明
[debug] [:] 从const声明获取声明列表 (地址: 0x55d7ba543100)，包含1个项目
[debug] [:] Token: a, 类型: 321, 位置: 4:2
[debug] [:] Token: ,, 类型: 314, 位置: 4:3
[debug] [:] Token: b, 类型: 321, 位置: 4:5
[debug] [:] Token: ,, 类型: 314, 位置: 4:6
[debug] [:] Token: k, 类型: 321, 位置: 4:8
[debug] [:] Token: ,, 类型: 314, 位置: 4:9
[debug] [:] Token: i, 类型: 321, 位置: 4:11
[debug] [:] Token: :, 类型: 313, 位置: 4:12
[debug] [:] Token: integer, 类型: 288, 位置: 4:14
[debug] [:] Token: ;, 类型: 312, 位置: 4:21
[debug] [:] Token: function, 类型: 263, 位置: 6:0
[debug] [:] Token: inc_a, 类型: 321, 位置: 6:9
[debug] [:] Token: :, 类型: 313, 位置: 6:14
[debug] [:] 创建空的参数列表
[debug] [:] Token: integer, 类型: 288, 位置: 6:16
[debug] [:] Token: ;, 类型: 312, 位置: 6:23
[debug] [:] Token: var, 类型: 261, 位置: 7:0
[debug] [:] Token: temp_b, 类型: 321, 位置: 8:2
[debug] [:] Token: :, 类型: 313, 位置: 8:8
[debug] [:] Token: integer, 类型: 288, 位置: 8:10
[debug] [:] Token: ;, 类型: 312, 位置: 8:17
[debug] [:] Token: begin, 类型: 259, 位置: 9:0
[debug] [:] Token: temp_b, 类型: 321, 位置: 10:2
[debug] [:] Token: :=, 类型: 293, 位置: 10:9
[debug] [:] Token: a, 类型: 321, 位置: 10:12
[debug] [:] Token: ;, 类型: 312, 位置: 10:13
[debug] [:] 添加第一条语句到语句列表
[debug] [:] Token: temp_b, 类型: 321, 位置: 11:2
[debug] [:] Token: :=, 类型: 293, 位置: 11:9
[debug] [:] Token: temp_b, 类型: 321, 位置: 11:12
[debug] [:] Token: +, 类型: 294, 位置: 11:19
[debug] [:] Token: 1, 类型: 317, 位置: 11:21
[debug] [:] Token: ;, 类型: 312, 位置: 11:22
[debug] [:] 向语句列表添加新语句
[debug] [:] Token: a, 类型: 321, 位置: 12:2
[debug] [:] Token: :=, 类型: 293, 位置: 12:4
[debug] [:] Token: temp_b, 类型: 321, 位置: 12:7
[debug] [:] Token: ;, 类型: 312, 位置: 12:13
[debug] [:] 向语句列表添加新语句
[debug] [:] Token: inc_a, 类型: 321, 位置: 13:2
[debug] [:] Token: :=, 类型: 293, 位置: 13:8
[debug] [:] Token: a, 类型: 321, 位置: 13:11
[debug] [:] Token: ;, 类型: 312, 位置: 13:12
[debug] [:] 向语句列表添加新语句
[debug] [:] Token: end, 类型: 260, 位置: 14:0
[debug] [:] 处理语句列表后的分号
[debug] [:] 处理完整个复合语句
[debug] [:] 创建新的声明列表用于函数inc_a
[debug] [:] 添加函数inc_a到声明列表
[debug] [:] Token: ;, 类型: 312, 位置: 14:3
[debug] [:] 函数声明处理完成，当前声明列表包含1个项目
[debug] [:] 合并函数声明后，声明列表包含3个项目
[debug] [:] Token: begin, 类型: 259, 位置: 17:0
[debug] [:] Token: a, 类型: 321, 位置: 18:2
[debug] [:] Token: :=, 类型: 293, 位置: 18:4
[debug] [:] Token: -, 类型: 295, 位置: 18:7
[debug] [:] Token: 1, 类型: 317, 位置: 18:8
[debug] [:] Token: ;, 类型: 312, 位置: 18:9
[debug] [:] 添加第一条语句到语句列表
[debug] [:] Token: b, 类型: 321, 位置: 19:2
[debug] [:] Token: :=, 类型: 293, 位置: 19:4
[debug] [:] Token: 1, 类型: 317, 位置: 19:7
[debug] [:] Token: ;, 类型: 312, 位置: 19:8
[debug] [:] 向语句列表添加新语句
[debug] [:] Token: k, 类型: 321, 位置: 20:2
[debug] [:] Token: :=, 类型: 293, 位置: 20:4
[debug] [:] Token: 5, 类型: 317, 位置: 20:7
[debug] [:] Token: ;, 类型: 312, 位置: 20:8
[debug] [:] 向语句列表添加新语句
[debug] [:] Token: for, 类型: 269, 位置: 22:2
[debug] [:] Token: i, 类型: 321, 位置: 22:6
[debug] [:] Token: :=, 类型: 293, 位置: 22:8
[debug] [:] Token: 0, 类型: 317, 位置: 22:11
[debug] [:] Token: to, 类型: 270, 位置: 22:13
[debug] [:] Token: k, 类型: 321, 位置: 22:16
[debug] [:] Token: do, 类型: 268, 位置: 22:18
[debug] [:] Token: begin, 类型: 259, 位置: 23:2
[debug] [:] Token: if, 类型: 264, 位置: 24:4
[debug] [:] Token: (, 类型: 308, 位置: 24:7
[debug] [:] Token: inc_a, 类型: 321, 位置: 24:8
[debug] [:] Token: <>, 类型: 299, 位置: 24:14
[debug] [:] Token: 0, 类型: 317, 位置: 24:17
[debug] [:] Token: ), 类型: 309, 位置: 24:18
[debug] [:] Token: and, 类型: 282, 位置: 24:20
[debug] [:] Token: (, 类型: 308, 位置: 24:24
[debug] [:] Token: inc_a, 类型: 321, 位置: 24:25
[debug] [:] Token: <>, 类型: 299, 位置: 24:31
[debug] [:] Token: 0, 类型: 317, 位置: 24:34
[debug] [:] Token: ), 类型: 309, 位置: 24:35
[debug] [:] Token: and, 类型: 282, 位置: 24:37
[debug] [:] Token: (, 类型: 308, 位置: 24:41
[debug] [:] Token: inc_a, 类型: 321, 位置: 24:42
[debug] [:] Token: <>, 类型: 299, 位置: 24:48
[debug] [:] Token: 0, 类型: 317, 位置: 24:51
[debug] [:] Token: ), 类型: 309, 位置: 24:52
[debug] [:] Token: then, 类型: 265, 位置: 24:54
[debug] [:] Token: begin, 类型: 259, 位置: 25:4
[debug] [:] Token: write, 类型: 286, 位置: 26:6
[debug] [:] Token: (, 类型: 308, 位置: 26:11
[debug] [:] Token: a, 类型: 321, 位置: 26:12
[debug] [:] Token: ,, 类型: 314, 位置: 26:13
[debug] [:] Token: b, 类型: 321, 位置: 26:15
[debug] [:] Token: ,, 类型: 314, 位置: 26:16
[debug] [:] Token: split, 类型: 321, 位置: 26:18
[debug] [:] Token: ), 类型: 309, 位置: 26:23
[debug] [:] 添加第一条语句到语句列表
[debug] [:] Token: ;, 类型: 312, 位置: 26:24
[debug] [:] Token: end, 类型: 260, 位置: 27:4
[debug] [:] 处理语句列表后的分号
[debug] [:] 处理完整个复合语句
[debug] [:] Token: ;, 类型: 312, 位置: 27:7
[debug] [:] 添加第一条语句到语句列表
[debug] [:] Token: if, 类型: 264, 位置: 29:4
[debug] [:] Token: (, 类型: 308, 位置: 29:7
[debug] [:] Token: inc_a, 类型: 321, 位置: 29:8
[debug] [:] Token: <, 类型: 300, 位置: 29:14
[debug] [:] Token: 14, 类型: 317, 位置: 29:16
[debug] [:] Token: ), 类型: 309, 位置: 29:18
[debug] [:] Token: or, 类型: 283, 位置: 29:20
[debug] [:] Token: (, 类型: 308, 位置: 29:23
[debug] [:] Token: (, 类型: 308, 位置: 29:24
[debug] [:] Token: inc_a, 类型: 321, 位置: 29:25
[debug] [:] Token: <>, 类型: 299, 位置: 29:31
[debug] [:] Token: 0, 类型: 317, 位置: 29:34
[debug] [:] Token: ), 类型: 309, 位置: 29:35
[debug] [:] Token: and, 类型: 282, 位置: 29:37
[debug] [:] Token: (, 类型: 308, 位置: 29:41
[debug] [:] Token: (, 类型: 308, 位置: 29:42
[debug] [:] Token: inc_a, 类型: 321, 位置: 29:43
[debug] [:] Token: -, 类型: 295, 位置: 29:49
[debug] [:] Token: inc_a, 类型: 321, 位置: 29:51
[debug] [:] Token: +, 类型: 294, 位置: 29:57
[debug] [:] Token: 1, 类型: 317, 位置: 29:59
[debug] [:] Token: ), 类型: 309, 位置: 29:60
[debug] [:] Token: <>, 类型: 299, 位置: 29:62
[debug] [:] Token: 0, 类型: 317, 位置: 29:65
[debug] [:] Token: ), 类型: 309, 位置: 29:66
[debug] [:] Token: ), 类型: 309, 位置: 29:67
[debug] [:] Token: then, 类型: 265, 位置: 29:69
[debug] [:] Token: begin, 类型: 259, 位置: 30:4
[debug] [:] Token: write, 类型: 286, 位置: 31:6
[debug] [:] Token: (, 类型: 308, 位置: 31:11
[debug] [:] Token: a, 类型: 321, 位置: 31:12
[debug] [:] Token: ,, 类型: 314, 位置: 31:13
[debug] [:] Token: split, 类型: 321, 位置: 31:15
[debug] [:] Token: ), 类型: 309, 位置: 31:20
[debug] [:] 添加第一条语句到语句列表
[debug] [:] Token: ;, 类型: 312, 位置: 31:21
[debug] [:] Token: b, 类型: 321, 位置: 32:6
[debug] [:] Token: :=, 类型: 293, 位置: 32:8
[debug] [:] Token: b, 类型: 321, 位置: 32:11
[debug] [:] Token: *, 类型: 296, 位置: 32:13
[debug] [:] Token: 2, 类型: 317, 位置: 32:15
[debug] [:] Token: ;, 类型: 312, 位置: 32:16
[debug] [:] 向语句列表添加新语句
[debug] [:] Token: end, 类型: 260, 位置: 33:4
[debug] [:] 处理语句列表后的分号
[debug] [:] 处理完整个复合语句
[debug] [:] Token: else, 类型: 266, 位置: 34:4
[debug] [:] Token: begin, 类型: 259, 位置: 35:4
[debug] [:] Token: inc_a, 类型: 321, 位置: 36:6
[debug] [:] Token: ;, 类型: 312, 位置: 36:11
[debug] [:] 添加第一条语句到语句列表
[debug] [:] Token: end, 类型: 260, 位置: 37:4
[debug] [:] 处理语句列表后的分号
[debug] [:] 处理完整个复合语句
[debug] [:] 向语句列表添加新语句
[debug] [:] Token: ;, 类型: 312, 位置: 37:7
[debug] [:] Token: end, 类型: 260, 位置: 38:2
[debug] [:] 处理语句列表后的分号
[debug] [:] 处理完整个复合语句
[debug] [:] 向语句列表添加新语句
[debug] [:] Token: ;, 类型: 312, 位置: 38:5
[debug] [:] Token: write, 类型: 286, 位置: 40:2
[debug] [:] Token: (, 类型: 308, 位置: 40:7
[debug] [:] Token: a, 类型: 321, 位置: 40:8
[debug] [:] Token: ,, 类型: 314, 位置: 40:9
[debug] [:] Token: b, 类型: 321, 位置: 40:10
[debug] [:] Token: ,, 类型: 314, 位置: 40:11
[debug] [:] Token: split, 类型: 321, 位置: 40:12
[debug] [:] Token: ), 类型: 309, 位置: 40:17
[debug] [:] 向语句列表添加新语句
[debug] [:] Token: ;, 类型: 312, 位置: 40:18
[debug] [:] Token: write, 类型: 286, 位置: 41:2
[debug] [:] Token: (, 类型: 308, 位置: 41:7
[debug] [:] Token: a, 类型: 321, 位置: 41:8
[debug] [:] Token: ), 类型: 309, 位置: 41:9
[debug] [:] 向语句列表添加新语句
[debug] [:] Token: ;, 类型: 312, 位置: 41:10
[debug] [:] Token: end, 类型: 260, 位置: 42:0
[debug] [:] 处理语句列表后的分号
[debug] [:] 处理完整个复合语句
[debug] [:] Token: ., 类型: 315, 位置: 42:3
[info] [:] 词法分析完成，共识别 169 个token
[debug] [:] 语法分析成功
[info] [:] + Program: main
[info] [:]   Body:
[info] [:]   + Block
[info] [:]     Declarations:
[info] [:]       + Constant Declaration: split
[info] [:]         + String: ","
[info] [:]       + Variable Declaration: int
[info] [:]         - a
[info] [:]         - b
[info] [:]         - k
[info] [:]         - i
[info] [:]       + Function Declaration: inc_a -> int
[info] [:]         Body:
[info] [:]           + Block
[info] [:]             Declarations:
[info] [:]               + Variable Declaration: int
[info] [:]                 - temp_b
[info] [:]             Body:
[info] [:]               + Compound Statement
[info] [:]                 + Assignment: temp_b =
[info] [:]                   + Variable: a
[info] [:]                 + Assignment: temp_b =
[info] [:]                   + Binary Op: +
[info] [:]                     Left:
[info] [:]                       + Variable: temp_b
[info] [:]                     Right:
[info] [:]                       + Number: 1
[info] [:]                 + Assignment: a =
[info] [:]                   + Variable: temp_b
[info] [:]                 + Assignment: inc_a =
[info] [:]                   + Variable: a
[info] [:]     Body:
[info] [:]       + Compound Statement
[info] [:]         + Assignment: a =
[info] [:]           + Unary Op: -
[info] [:]             Operand:
[info] [:]               + Number: 1
[info] [:]         + Assignment: b =
[info] [:]           + Number: 1
[info] [:]         + Assignment: k =
[info] [:]           + Number: 5
[info] [:]         + For Statement: i to
[info] [:]           Start:
[info] [:]             + Number: 0
[info] [:]           End:
[info] [:]             + Variable: k
[info] [:]           Body:
[info] [:]             + Compound Statement
[info] [:]               + If Statement
[info] [:]                 Condition:
[info] [:]                   + Binary Op: &&
[info] [:]                     Left:
[info] [:]                       + Binary Op: &&
[info] [:]                         Left:
[info] [:]                           + Binary Op: !=
[info] [:]                             Left:
[info] [:]                               + Variable: inc_a
[info] [:]                             Right:
[info] [:]                               + Number: 0
[info] [:]                         Right:
[info] [:]                           + Binary Op: !=
[info] [:]                             Left:
[info] [:]                               + Variable: inc_a
[info] [:]                             Right:
[info] [:]                               + Number: 0
[info] [:]                     Right:
[info] [:]                       + Binary Op: !=
[info] [:]                         Left:
[info] [:]                           + Variable: inc_a
[info] [:]                         Right:
[info] [:]                           + Number: 0
[info] [:]                 Then:
[info] [:]                   + Compound Statement
[info] [:]                     + Write Statement
[info] [:]                       + Variable: a
[info] [:]                       + Variable: b
[info] [:]                       + Variable: split
[info] [:]               + If Statement
[info] [:]                 Condition:
[info] [:]                   + Binary Op: ||
[info] [:]                     Left:
[info] [:]                       + Binary Op: <
[info] [:]                         Left:
[info] [:]                           + Variable: inc_a
[info] [:]                         Right:
[info] [:]                           + Number: 14
[info] [:]                     Right:
[info] [:]                       + Binary Op: &&
[info] [:]                         Left:
[info] [:]                           + Binary Op: !=
[info] [:]                             Left:
[info] [:]                               + Variable: inc_a
[info] [:]                             Right:
[info] [:]                               + Number: 0
[info] [:]                         Right:
[info] [:]                           + Binary Op: !=
[info] [:]                             Left:
[info] [:]                               + Binary Op: +
[info] [:]                                 Left:
[info] [:]                                   + Binary Op: -
[info] [:]                                     Left:
[info] [:]                                       + Variable: inc_a
[info] [:]                                     Right:
[info] [:]                                       + Variable: inc_a
[info] [:]                                 Right:
[info] [:]                                   + Number: 1
[info] [:]                             Right:
[info] [:]                               + Number: 0
[info] [:]                 Then:
[info] [:]                   + Compound Statement
[info] [:]                     + Write Statement
[info] [:]                       + Variable: a
[info] [:]                       + Variable: split
[info] [:]                     + Assignment: b =
[info] [:]                       + Binary Op: *
[info] [:]                         Left:
[info] [:]                           + Variable: b
[info] [:]                         Right:
[info] [:]                           + Number: 2
[info] [:]                 Else:
[info] [:]                   + Compound Statement
[info] [:]                     + Procedure Call: inc_a
[info] [:]         + Write Statement
[info] [:]           + Variable: a
[info] [:]           + Variable: b
[info] [:]           + Variable: split
[info] [:]         + Write Statement
[info] [:]           + Variable: a
[debug] [:] 常量 split 已添加到符号表，类型: char*
[info] [:] 转换完成: '50_side_effect.pas' -> '50_side_effect.c'
